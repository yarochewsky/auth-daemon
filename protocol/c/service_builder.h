#ifndef SERVICE_BUILDER_H
#define SERVICE_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef SERVICE_READER_H
#include "service_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

typedef flatbuffers_union_ref_t service_Payload_union_ref_t;
typedef flatbuffers_union_vec_ref_t service_Payload_union_vec_ref_t;
static service_Payload_union_ref_t service_Payload_clone(flatbuffers_builder_t *B, service_Payload_union_t t);

static const flatbuffers_voffset_t __service_HeartbeatRequest_required[] = { 0 };
typedef flatbuffers_ref_t service_HeartbeatRequest_ref_t;
static service_HeartbeatRequest_ref_t service_HeartbeatRequest_clone(flatbuffers_builder_t *B, service_HeartbeatRequest_table_t t);
__flatbuffers_build_table(flatbuffers_, service_HeartbeatRequest, 0)

static const flatbuffers_voffset_t __service_HeartbeatResponse_required[] = { 0 };
typedef flatbuffers_ref_t service_HeartbeatResponse_ref_t;
static service_HeartbeatResponse_ref_t service_HeartbeatResponse_clone(flatbuffers_builder_t *B, service_HeartbeatResponse_table_t t);
__flatbuffers_build_table(flatbuffers_, service_HeartbeatResponse, 0)

static const flatbuffers_voffset_t __service_AuthorizeProcessRequest_required[] = { 0 };
typedef flatbuffers_ref_t service_AuthorizeProcessRequest_ref_t;
static service_AuthorizeProcessRequest_ref_t service_AuthorizeProcessRequest_clone(flatbuffers_builder_t *B, service_AuthorizeProcessRequest_table_t t);
__flatbuffers_build_table(flatbuffers_, service_AuthorizeProcessRequest, 2)

static const flatbuffers_voffset_t __service_AuthorizeProcessResponse_required[] = { 0 };
typedef flatbuffers_ref_t service_AuthorizeProcessResponse_ref_t;
static service_AuthorizeProcessResponse_ref_t service_AuthorizeProcessResponse_clone(flatbuffers_builder_t *B, service_AuthorizeProcessResponse_table_t t);
__flatbuffers_build_table(flatbuffers_, service_AuthorizeProcessResponse, 0)

static const flatbuffers_voffset_t __service_Message_required[] = { 0 };
typedef flatbuffers_ref_t service_Message_ref_t;
static service_Message_ref_t service_Message_clone(flatbuffers_builder_t *B, service_Message_table_t t);
__flatbuffers_build_table(flatbuffers_, service_Message, 3)

#define __service_HeartbeatRequest_formal_args 
#define __service_HeartbeatRequest_call_args 
static inline service_HeartbeatRequest_ref_t service_HeartbeatRequest_create(flatbuffers_builder_t *B __service_HeartbeatRequest_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, service_HeartbeatRequest, service_HeartbeatRequest_file_identifier, service_HeartbeatRequest_type_identifier)

#define __service_HeartbeatResponse_formal_args 
#define __service_HeartbeatResponse_call_args 
static inline service_HeartbeatResponse_ref_t service_HeartbeatResponse_create(flatbuffers_builder_t *B __service_HeartbeatResponse_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, service_HeartbeatResponse, service_HeartbeatResponse_file_identifier, service_HeartbeatResponse_type_identifier)

#define __service_AuthorizeProcessRequest_formal_args , uint32_t v0, uint32_t v1
#define __service_AuthorizeProcessRequest_call_args , v0, v1
static inline service_AuthorizeProcessRequest_ref_t service_AuthorizeProcessRequest_create(flatbuffers_builder_t *B __service_AuthorizeProcessRequest_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, service_AuthorizeProcessRequest, service_AuthorizeProcessRequest_file_identifier, service_AuthorizeProcessRequest_type_identifier)

#define __service_AuthorizeProcessResponse_formal_args 
#define __service_AuthorizeProcessResponse_call_args 
static inline service_AuthorizeProcessResponse_ref_t service_AuthorizeProcessResponse_create(flatbuffers_builder_t *B __service_AuthorizeProcessResponse_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, service_AuthorizeProcessResponse, service_AuthorizeProcessResponse_file_identifier, service_AuthorizeProcessResponse_type_identifier)

#define __service_Message_formal_args , uint64_t v0, service_Payload_union_ref_t v2
#define __service_Message_call_args , v0, v2
static inline service_Message_ref_t service_Message_create(flatbuffers_builder_t *B __service_Message_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, service_Message, service_Message_file_identifier, service_Message_type_identifier)

static inline service_Payload_union_ref_t service_Payload_as_NONE()
{ service_Payload_union_ref_t uref; uref.type = service_Payload_NONE; uref.value = 0; return uref; }
static inline service_Payload_union_ref_t service_Payload_as_HeartbeatRequest(service_HeartbeatRequest_ref_t ref)
{ service_Payload_union_ref_t uref; uref.type = service_Payload_HeartbeatRequest; uref.value = ref; return uref; }
static inline service_Payload_union_ref_t service_Payload_as_HeartbeatResponse(service_HeartbeatResponse_ref_t ref)
{ service_Payload_union_ref_t uref; uref.type = service_Payload_HeartbeatResponse; uref.value = ref; return uref; }
static inline service_Payload_union_ref_t service_Payload_as_AuthorizeProcessRequest(service_AuthorizeProcessRequest_ref_t ref)
{ service_Payload_union_ref_t uref; uref.type = service_Payload_AuthorizeProcessRequest; uref.value = ref; return uref; }
static inline service_Payload_union_ref_t service_Payload_as_AuthorizeProcessResponse(service_AuthorizeProcessResponse_ref_t ref)
{ service_Payload_union_ref_t uref; uref.type = service_Payload_AuthorizeProcessResponse; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, service_Payload)

static service_Payload_union_ref_t service_Payload_clone(flatbuffers_builder_t *B, service_Payload_union_t u)
{
    switch (u.type) {
    case 1: return service_Payload_as_HeartbeatRequest(service_HeartbeatRequest_clone(B, (service_HeartbeatRequest_table_t)u.value));
    case 2: return service_Payload_as_HeartbeatResponse(service_HeartbeatResponse_clone(B, (service_HeartbeatResponse_table_t)u.value));
    case 3: return service_Payload_as_AuthorizeProcessRequest(service_AuthorizeProcessRequest_clone(B, (service_AuthorizeProcessRequest_table_t)u.value));
    case 4: return service_Payload_as_AuthorizeProcessResponse(service_AuthorizeProcessResponse_clone(B, (service_AuthorizeProcessResponse_table_t)u.value));
    default: return service_Payload_as_NONE();
    }
}


static inline service_HeartbeatRequest_ref_t service_HeartbeatRequest_create(flatbuffers_builder_t *B __service_HeartbeatRequest_formal_args)
{
    if (service_HeartbeatRequest_start(B)) {
        return 0;
    }
    return service_HeartbeatRequest_end(B);
}

static service_HeartbeatRequest_ref_t service_HeartbeatRequest_clone(flatbuffers_builder_t *B, service_HeartbeatRequest_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (service_HeartbeatRequest_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, service_HeartbeatRequest_end(B));
}


static inline service_HeartbeatResponse_ref_t service_HeartbeatResponse_create(flatbuffers_builder_t *B __service_HeartbeatResponse_formal_args)
{
    if (service_HeartbeatResponse_start(B)) {
        return 0;
    }
    return service_HeartbeatResponse_end(B);
}

static service_HeartbeatResponse_ref_t service_HeartbeatResponse_clone(flatbuffers_builder_t *B, service_HeartbeatResponse_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (service_HeartbeatResponse_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, service_HeartbeatResponse_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, service_AuthorizeProcessRequest_old_pid, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), service_AuthorizeProcessRequest)
__flatbuffers_build_scalar_field(1, flatbuffers_, service_AuthorizeProcessRequest_new_pid, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), service_AuthorizeProcessRequest)

static inline service_AuthorizeProcessRequest_ref_t service_AuthorizeProcessRequest_create(flatbuffers_builder_t *B __service_AuthorizeProcessRequest_formal_args)
{
    if (service_AuthorizeProcessRequest_start(B)
        || service_AuthorizeProcessRequest_old_pid_add(B, v0)
        || service_AuthorizeProcessRequest_new_pid_add(B, v1)) {
        return 0;
    }
    return service_AuthorizeProcessRequest_end(B);
}

static service_AuthorizeProcessRequest_ref_t service_AuthorizeProcessRequest_clone(flatbuffers_builder_t *B, service_AuthorizeProcessRequest_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (service_AuthorizeProcessRequest_start(B)
        || service_AuthorizeProcessRequest_old_pid_pick(B, t)
        || service_AuthorizeProcessRequest_new_pid_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, service_AuthorizeProcessRequest_end(B));
}


static inline service_AuthorizeProcessResponse_ref_t service_AuthorizeProcessResponse_create(flatbuffers_builder_t *B __service_AuthorizeProcessResponse_formal_args)
{
    if (service_AuthorizeProcessResponse_start(B)) {
        return 0;
    }
    return service_AuthorizeProcessResponse_end(B);
}

static service_AuthorizeProcessResponse_ref_t service_AuthorizeProcessResponse_clone(flatbuffers_builder_t *B, service_AuthorizeProcessResponse_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (service_AuthorizeProcessResponse_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, service_AuthorizeProcessResponse_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, service_Message_seq_num, flatbuffers_uint64, uint64_t, 8, 8, UINT64_C(0), service_Message)
__flatbuffers_build_union_field(2, flatbuffers_, service_Message_payload, service_Payload, service_Message)
__flatbuffers_build_union_table_value_field(flatbuffers_, service_Message_payload, service_Payload, HeartbeatRequest, service_HeartbeatRequest)
__flatbuffers_build_union_table_value_field(flatbuffers_, service_Message_payload, service_Payload, HeartbeatResponse, service_HeartbeatResponse)
__flatbuffers_build_union_table_value_field(flatbuffers_, service_Message_payload, service_Payload, AuthorizeProcessRequest, service_AuthorizeProcessRequest)
__flatbuffers_build_union_table_value_field(flatbuffers_, service_Message_payload, service_Payload, AuthorizeProcessResponse, service_AuthorizeProcessResponse)

static inline service_Message_ref_t service_Message_create(flatbuffers_builder_t *B __service_Message_formal_args)
{
    if (service_Message_start(B)
        || service_Message_seq_num_add(B, v0)
        || service_Message_payload_add_value(B, v2)
        || service_Message_payload_add_type(B, v2.type)) {
        return 0;
    }
    return service_Message_end(B);
}

static service_Message_ref_t service_Message_clone(flatbuffers_builder_t *B, service_Message_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (service_Message_start(B)
        || service_Message_seq_num_pick(B, t)
        || service_Message_payload_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, service_Message_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* SERVICE_BUILDER_H */
