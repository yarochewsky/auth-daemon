#ifndef SERVICE_VERIFIER_H
#define SERVICE_VERIFIER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef SERVICE_READER_H
#include "service_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int service_HeartbeatRequest_verify_table(flatcc_table_verifier_descriptor_t *td);
static int service_HeartbeatResponse_verify_table(flatcc_table_verifier_descriptor_t *td);
static int service_AuthorizeProcessRequest_verify_table(flatcc_table_verifier_descriptor_t *td);
static int service_AuthorizeProcessResponse_verify_table(flatcc_table_verifier_descriptor_t *td);
static int service_Message_verify_table(flatcc_table_verifier_descriptor_t *td);

static int service_Payload_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, service_HeartbeatRequest_verify_table); /* HeartbeatRequest */
    case 2: return flatcc_verify_union_table(ud, service_HeartbeatResponse_verify_table); /* HeartbeatResponse */
    case 3: return flatcc_verify_union_table(ud, service_AuthorizeProcessRequest_verify_table); /* AuthorizeProcessRequest */
    case 4: return flatcc_verify_union_table(ud, service_AuthorizeProcessResponse_verify_table); /* AuthorizeProcessResponse */
    default: return flatcc_verify_ok;
    }
}

static int service_HeartbeatRequest_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int service_HeartbeatRequest_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, service_HeartbeatRequest_identifier, &service_HeartbeatRequest_verify_table);
}

static inline int service_HeartbeatRequest_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, service_HeartbeatRequest_type_identifier, &service_HeartbeatRequest_verify_table);
}

static inline int service_HeartbeatRequest_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &service_HeartbeatRequest_verify_table);
}

static inline int service_HeartbeatRequest_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &service_HeartbeatRequest_verify_table);
}

static int service_HeartbeatResponse_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int service_HeartbeatResponse_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, service_HeartbeatResponse_identifier, &service_HeartbeatResponse_verify_table);
}

static inline int service_HeartbeatResponse_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, service_HeartbeatResponse_type_identifier, &service_HeartbeatResponse_verify_table);
}

static inline int service_HeartbeatResponse_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &service_HeartbeatResponse_verify_table);
}

static inline int service_HeartbeatResponse_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &service_HeartbeatResponse_verify_table);
}

static int service_AuthorizeProcessRequest_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* old_pid */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* new_pid */)) return ret;
    return flatcc_verify_ok;
}

static inline int service_AuthorizeProcessRequest_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, service_AuthorizeProcessRequest_identifier, &service_AuthorizeProcessRequest_verify_table);
}

static inline int service_AuthorizeProcessRequest_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, service_AuthorizeProcessRequest_type_identifier, &service_AuthorizeProcessRequest_verify_table);
}

static inline int service_AuthorizeProcessRequest_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &service_AuthorizeProcessRequest_verify_table);
}

static inline int service_AuthorizeProcessRequest_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &service_AuthorizeProcessRequest_verify_table);
}

static int service_AuthorizeProcessResponse_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int service_AuthorizeProcessResponse_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, service_AuthorizeProcessResponse_identifier, &service_AuthorizeProcessResponse_verify_table);
}

static inline int service_AuthorizeProcessResponse_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, service_AuthorizeProcessResponse_type_identifier, &service_AuthorizeProcessResponse_verify_table);
}

static inline int service_AuthorizeProcessResponse_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &service_AuthorizeProcessResponse_verify_table);
}

static inline int service_AuthorizeProcessResponse_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &service_AuthorizeProcessResponse_verify_table);
}

static int service_Message_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* seq_num */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 2, 0, &service_Payload_union_verifier) /* payload */)) return ret;
    return flatcc_verify_ok;
}

static inline int service_Message_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, service_Message_identifier, &service_Message_verify_table);
}

static inline int service_Message_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, service_Message_type_identifier, &service_Message_verify_table);
}

static inline int service_Message_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &service_Message_verify_table);
}

static inline int service_Message_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &service_Message_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* SERVICE_VERIFIER_H */
