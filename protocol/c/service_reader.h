#ifndef SERVICE_READER_H
#define SERVICE_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct service_HeartbeatRequest_table *service_HeartbeatRequest_table_t;
typedef struct service_HeartbeatRequest_table *service_HeartbeatRequest_mutable_table_t;
typedef const flatbuffers_uoffset_t *service_HeartbeatRequest_vec_t;
typedef flatbuffers_uoffset_t *service_HeartbeatRequest_mutable_vec_t;
typedef const struct service_HeartbeatResponse_table *service_HeartbeatResponse_table_t;
typedef struct service_HeartbeatResponse_table *service_HeartbeatResponse_mutable_table_t;
typedef const flatbuffers_uoffset_t *service_HeartbeatResponse_vec_t;
typedef flatbuffers_uoffset_t *service_HeartbeatResponse_mutable_vec_t;
typedef const struct service_AuthorizeProcessRequest_table *service_AuthorizeProcessRequest_table_t;
typedef struct service_AuthorizeProcessRequest_table *service_AuthorizeProcessRequest_mutable_table_t;
typedef const flatbuffers_uoffset_t *service_AuthorizeProcessRequest_vec_t;
typedef flatbuffers_uoffset_t *service_AuthorizeProcessRequest_mutable_vec_t;
typedef const struct service_AuthorizeProcessResponse_table *service_AuthorizeProcessResponse_table_t;
typedef struct service_AuthorizeProcessResponse_table *service_AuthorizeProcessResponse_mutable_table_t;
typedef const flatbuffers_uoffset_t *service_AuthorizeProcessResponse_vec_t;
typedef flatbuffers_uoffset_t *service_AuthorizeProcessResponse_mutable_vec_t;
typedef const struct service_Message_table *service_Message_table_t;
typedef struct service_Message_table *service_Message_mutable_table_t;
typedef const flatbuffers_uoffset_t *service_Message_vec_t;
typedef flatbuffers_uoffset_t *service_Message_mutable_vec_t;
#ifndef service_HeartbeatRequest_file_identifier
#define service_HeartbeatRequest_file_identifier flatbuffers_identifier
#endif
/* deprecated, use service_HeartbeatRequest_file_identifier */
#ifndef service_HeartbeatRequest_identifier
#define service_HeartbeatRequest_identifier flatbuffers_identifier
#endif
#define service_HeartbeatRequest_type_hash ((flatbuffers_thash_t)0xc1c3125f)
#define service_HeartbeatRequest_type_identifier "\x5f\x12\xc3\xc1"
#ifndef service_HeartbeatResponse_file_identifier
#define service_HeartbeatResponse_file_identifier flatbuffers_identifier
#endif
/* deprecated, use service_HeartbeatResponse_file_identifier */
#ifndef service_HeartbeatResponse_identifier
#define service_HeartbeatResponse_identifier flatbuffers_identifier
#endif
#define service_HeartbeatResponse_type_hash ((flatbuffers_thash_t)0x9058465)
#define service_HeartbeatResponse_type_identifier "\x65\x84\x05\x09"
#ifndef service_AuthorizeProcessRequest_file_identifier
#define service_AuthorizeProcessRequest_file_identifier flatbuffers_identifier
#endif
/* deprecated, use service_AuthorizeProcessRequest_file_identifier */
#ifndef service_AuthorizeProcessRequest_identifier
#define service_AuthorizeProcessRequest_identifier flatbuffers_identifier
#endif
#define service_AuthorizeProcessRequest_type_hash ((flatbuffers_thash_t)0x91e7be53)
#define service_AuthorizeProcessRequest_type_identifier "\x53\xbe\xe7\x91"
#ifndef service_AuthorizeProcessResponse_file_identifier
#define service_AuthorizeProcessResponse_file_identifier flatbuffers_identifier
#endif
/* deprecated, use service_AuthorizeProcessResponse_file_identifier */
#ifndef service_AuthorizeProcessResponse_identifier
#define service_AuthorizeProcessResponse_identifier flatbuffers_identifier
#endif
#define service_AuthorizeProcessResponse_type_hash ((flatbuffers_thash_t)0xa6182f01)
#define service_AuthorizeProcessResponse_type_identifier "\x01\x2f\x18\xa6"
#ifndef service_Message_file_identifier
#define service_Message_file_identifier flatbuffers_identifier
#endif
/* deprecated, use service_Message_file_identifier */
#ifndef service_Message_identifier
#define service_Message_identifier flatbuffers_identifier
#endif
#define service_Message_type_hash ((flatbuffers_thash_t)0x38898d5d)
#define service_Message_type_identifier "\x5d\x8d\x89\x38"



struct service_HeartbeatRequest_table { uint8_t unused__; };

static inline size_t service_HeartbeatRequest_vec_len(service_HeartbeatRequest_vec_t vec)
__flatbuffers_vec_len(vec)
static inline service_HeartbeatRequest_table_t service_HeartbeatRequest_vec_at(service_HeartbeatRequest_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(service_HeartbeatRequest_table_t, vec, i, 0)
__flatbuffers_table_as_root(service_HeartbeatRequest)


struct service_HeartbeatResponse_table { uint8_t unused__; };

static inline size_t service_HeartbeatResponse_vec_len(service_HeartbeatResponse_vec_t vec)
__flatbuffers_vec_len(vec)
static inline service_HeartbeatResponse_table_t service_HeartbeatResponse_vec_at(service_HeartbeatResponse_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(service_HeartbeatResponse_table_t, vec, i, 0)
__flatbuffers_table_as_root(service_HeartbeatResponse)


struct service_AuthorizeProcessRequest_table { uint8_t unused__; };

static inline size_t service_AuthorizeProcessRequest_vec_len(service_AuthorizeProcessRequest_vec_t vec)
__flatbuffers_vec_len(vec)
static inline service_AuthorizeProcessRequest_table_t service_AuthorizeProcessRequest_vec_at(service_AuthorizeProcessRequest_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(service_AuthorizeProcessRequest_table_t, vec, i, 0)
__flatbuffers_table_as_root(service_AuthorizeProcessRequest)

__flatbuffers_define_scalar_field(0, service_AuthorizeProcessRequest, old_pid, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(1, service_AuthorizeProcessRequest, new_pid, flatbuffers_uint32, uint32_t, UINT32_C(0))

struct service_AuthorizeProcessResponse_table { uint8_t unused__; };

static inline size_t service_AuthorizeProcessResponse_vec_len(service_AuthorizeProcessResponse_vec_t vec)
__flatbuffers_vec_len(vec)
static inline service_AuthorizeProcessResponse_table_t service_AuthorizeProcessResponse_vec_at(service_AuthorizeProcessResponse_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(service_AuthorizeProcessResponse_table_t, vec, i, 0)
__flatbuffers_table_as_root(service_AuthorizeProcessResponse)

typedef uint8_t service_Payload_union_type_t;
__flatbuffers_define_integer_type(service_Payload, service_Payload_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, service_Payload)
#define service_Payload_NONE ((service_Payload_union_type_t)UINT8_C(0))
#define service_Payload_HeartbeatRequest ((service_Payload_union_type_t)UINT8_C(1))
#define service_Payload_HeartbeatResponse ((service_Payload_union_type_t)UINT8_C(2))
#define service_Payload_AuthorizeProcessRequest ((service_Payload_union_type_t)UINT8_C(3))
#define service_Payload_AuthorizeProcessResponse ((service_Payload_union_type_t)UINT8_C(4))

static inline const char *service_Payload_type_name(service_Payload_union_type_t type)
{
    switch (type) {
    case service_Payload_NONE: return "NONE";
    case service_Payload_HeartbeatRequest: return "HeartbeatRequest";
    case service_Payload_HeartbeatResponse: return "HeartbeatResponse";
    case service_Payload_AuthorizeProcessRequest: return "AuthorizeProcessRequest";
    case service_Payload_AuthorizeProcessResponse: return "AuthorizeProcessResponse";
    default: return "";
    }
}

static inline int service_Payload_is_known_type(service_Payload_union_type_t type)
{
    switch (type) {
    case service_Payload_NONE: return 1;
    case service_Payload_HeartbeatRequest: return 1;
    case service_Payload_HeartbeatResponse: return 1;
    case service_Payload_AuthorizeProcessRequest: return 1;
    case service_Payload_AuthorizeProcessResponse: return 1;
    default: return 0;
    }
}


struct service_Message_table { uint8_t unused__; };

static inline size_t service_Message_vec_len(service_Message_vec_t vec)
__flatbuffers_vec_len(vec)
static inline service_Message_table_t service_Message_vec_at(service_Message_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(service_Message_table_t, vec, i, 0)
__flatbuffers_table_as_root(service_Message)

__flatbuffers_define_scalar_field(0, service_Message, seq_num, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_union_field(flatbuffers_, 2, service_Message, payload, service_Payload, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* SERVICE_READER_H */
